const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const axios = require('axios');

export = {
    data: new SlashCommandBuilder()
        .setName('rick')
        .setDescription('view info on a random Rick & Morty character or location')
        .addStringOption(option =>
            option.setName('category')
                .setDescription('rick and morty stuff')
                .setRequired(true)
                .addChoices(
                    { name: 'characters', value: 'character' },
                    { name: 'locations', value: 'location' }
                )
        ),


    async execute(interaction) {
        let choice: string = interaction.options.get('category').value
        let data: string = ''
        let random:string = ''


        if (choice == 'character') {
            random = Math.floor(Math.random() * 826)
        } else {
            random = Math.floor(Math.random() * 126)
        }

        await interaction.deferReply()
        await wait(2000)
        await axios.get(`https://rickandmortyapi.com/api/${choice}/${random}`)
            .then(res => {
                data = res.data
            })
            .catch(e => console.log(e))


        try {
            if (choice == 'character') {
                embed = new EmbedBuilder()
                    .setColor([117, 1, 1])
                    .setTitle(data.name)
                    .setDescription(`ID: ${data.id.toString()}`)
                    .setImage(data.image)
                    .addFields(
                        { name: 'Type', value: data.type, inline: true },
                        { name: 'Gender', value: data.gender, inline: true },
                        { name: 'Home World', value: data.origin.name, inline: true },
                    )
                    .addFields(
                        { name: 'Species', value: data.species, inline: true },
                        { name: 'Status', value: data.status, inline: true },
                    )
                    .setFooter({ text: 'Ox-Bot by YerGodDamnRight' });
                await interaction.editReply({ embeds: [embed] });
            }
            else {
                embed = new EmbedBuilder()
                    .setColor([117, 1, 1])
                    .setTitle(data.name)
                    .setDescription(`ID: ${data.id.toString()}`)
                    .addFields(
                        { name: 'Type', value: String(data.type), inline: true },
                        { name: 'Dimension', value: String(data.dimension), inline: true },
                    )
                    .setFooter({ text: 'Ox-Bot by YerGodDamnRight' });
                await interaction.editReply({ embeds: [embed] });
            }
        } catch { await interaction.editReply('error with your information, try again soon') }

    },
};